on:
  push:
    branches:
      - '*'
      - '!master'

name: CI

jobs:
  php-lint:
    name: PHP linter

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 5.5
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
        include:
          - php-version: 5.5
            exclude-pattern: Classes/Middleware/*
          - php-version: 5.6
            exclude-pattern: Classes/Middleware/*

    steps:
      - name: Configure PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Checkout
        uses: actions/checkout@v1

      - name: Run PHP lint
        run: |
          echo "${{ matrix.exclude-pattern }}"
          find *.php Classes/ Configuration/ Tests/ -name '*.php' -not -path ${{ matrix.exclude-pattern }} -prune
          find *.php Classes/ Configuration/ Tests/ -name '*.php' -not -path ${{ matrix.exclude-pattern }} -prune -print0 | xargs -0 -n 1 -P 4 php -l

  typoscript-lint:
    name: TypoScript linter

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress

      - name: Run TypoScript lint
        run: composer ci:ts:lint

  php-code-sniffer:
    name: PHP Code Sniffer

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress

      - name: Run PHP Code Sniffer
        run: composer ci:php:sniff

  docs-generate:
    name: Docs Generate & Check

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate documentation
        run: OUTPUT=`composer docs:generate`; echo "{$OUTPUT}"; echo -n "{$OUTPUT}" | grep "There are no Sphinx warnings"

  unit-tests:
    name: Unit tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        typo3-version:
          - "^7.6"
          - "^8.7"
          - "^9.5"
          - "^10.3"
        composer-dependencies:
          - highest
          - lowest
        php-version:
          - 5.5
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
        exclude:
          - typo3-version: "^7.6"
            php-version: 7.2
          - typo3-version: "^7.6"
            php-version: 7.3
          - typo3-version: "^7.6"
            php-version: 7.4
          - typo3-version: "^8.7"
            php-version: 5.5
          - typo3-version: "^8.7"
            php-version: 5.6
          - typo3-version: "^9.5"
            php-version: 5.5
          - typo3-version: "^9.5"
            php-version: 5.6
          - typo3-version: "^9.5"
            php-version: 7.0
          - typo3-version: "^9.5"
            php-version: 7.1
          - typo3-version: "^10.3"
            php-version: 5.5
          - typo3-version: "^10.3"
            php-version: 5.6
          - typo3-version: "^10.3"
            php-version: 7.0
          - typo3-version: "^10.3"
            php-version: 7.1

    steps:
      - name: Configure PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Checkout
        uses: actions/checkout@v1

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-
      - name: Install TYPO3 Core
        env:
          TYPO3: ${{ matrix.typo3-version }}
        run: |
          composer require typo3/minimal:"${{ matrix.typo3-version }}"
          composer show
      - name: Install lowest dependencies with composer
        if: matrix.composer-dependencies == 'lowest'
        run: |
          composer update --no-ansi --no-interaction --no-progress --no-suggest --prefer-lowest
          composer show
      - name: Install highest dependencies with composer
        if: matrix.composer-dependencies == 'highest'
        run: |
          composer update --no-ansi --no-interaction --no-progress --no-suggest
          composer show
      - name: Run unit tests
        run: composer ci:tests:unit
